name: self-hosted

services:
  mysql:
    container_name: mysql
    image: mysql:${MYSQL_VERSION}
    restart: always
    network_mode: bridge
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${MYSQL_HOME}/${MYSQL_VERSION}/data:/var/lib/mysql
      - ${MYSQL_HOME}/${MYSQL_VERSION}/etc/my.cnf:/etc/my.cnf

  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}
    restart: always
    network_mode: bridge
    ports:
      - "6379:6379"
    volumes:
      - ${REDIS_HOME}/${REDIS_VERSION}/data:/data
    # command: redis-server --requirepass root

  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: postgres
    restart: unless-stopped
    # set shared memory limit when using docker-compose
    # shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    ports:
      - "5432:5432"
    volumes:
      - ${POSTGRES_HOME}/postgresql.conf:/etc/postgresql/postgresql.conf
      - ${POSTGRES_HOME}/data:/var/lib/postgresql/data
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_PASSWORD: postgres

  oracle:
    # image: oracle/database:19.3.0-ee
    image: container-registry.oracle.com/database/free:23.5.0.0-lite
    container_name: oracle-db
    # restart: always
    environment:
      # ORACLE_PDB: FREEPDB1
      # ORACLE_SID
      # ORACLE_SID: ORCL
      # 21 必须为 XE
      # ORACLE_SID: XE
      # 23ai 必须为 FREE
      ORACLE_SID: FREE
      ORACLE_PWD: oracle
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - ${ORACLE_HOME}/23ai/opt/oracle/oradata:/opt/oracle/oradata

  # sftp:
  #   container_name: sftp-go
  #   image: drakkan/sftpgo:latest

  zookeeper:
    image: zookeeper:${ZOOKEEPER_VERSION}
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka-broker:
    image: apache/kafka:${KAFKA_VERSION}
    container_name: kafka-broker
    ports:
      - "9092:9092"
    volumes:
      - ${KAFKA_HOME}/etc/kafka/secrets:/etc/kafka/secrets
      - ${KAFKA_HOME}/mnt/shared/config:/mnt/shared/config
      - ${KAFKA_HOME}/var/lib/kafka/data:/var/lib/kafka/data

  # kafka-ui:
  #   container_name: kafka-ui
  #   image: provectuslabs/kafka-ui:latest
  #   ports:
  #     - 19092:8080
  #   networks:
  #     - host
  #   # depends_on:
  #   #   - kafka-broker
  #   environment:
  #     DYNAMIC_CONFIG_ENABLED: 'true'
  #   extra_hosts:
  #     - "dev16=10.100.0.16"
  #     - "dev17=10.100.0.17"
  #     - "dev18=10.100.0.18"
  #   # volumes:
  #   #   - ${KAFKA_HOME}/kafkaui/config.yml:/etc/kafkaui/dynamic_config.yaml

  rabbitmq:
    image: rabbitmq:${RABBITMQ_VERSION}
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}


  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - ${MINIO_HOME}/data:/data
      # - ${MINIO_HOME}/config:/root/.minio
    command: server /data --console-address ":9001"


  sftpgo:
    image: drakkan/sftpgo:latest
    container_name: sftpgo
    ports:
      # Web UI
      - 2020:8080
      # SFTP/SSH
      - 2022:2022
      # extra
      # FTP
      - 2021:21
      - 50000-50010:50000-50010
      # WebDAV
      - 2080:80
    environment:
      SFTPGO_FTPD__BINDINGS__0__PORT: 21
      SFTPGO_FTPD__BINDINGS__0__FORCE_PASSIVE_IP: 127.0.0.1
      SFTPGO_FTPD__PASSIVE_PORT_RANGE__START: 50000
      SFTPGO_FTPD__PASSIVE_PORT_RANGE__END: 50010
      SFTPGO_WEBDAVD__BINDINGS__0__PORT: 80
    volumes:
      # - ${SFTPGO_HOME}:/srv/sftpgo
      - ${SFTPGO_HOME}/data:/srv/sftpgo/data
      - ${SFTPGO_HOME}/backups:/srv/sftpgo/backups
      - ${SFTPGO_HOME}/home:/var/lib/sftpgo


# docker run --name kafka-ui -p 39099:8080 --privileged=true --network=host -e KAFKA_CLUSTERS_0_NAME=Local -e KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=10.100_0.16:6667 -d provectuslabs/kafka-ui:latest
